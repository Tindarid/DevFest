<resources>
    <string name="app_name" translatable="false">DevFest</string>
    <string name="conference_tag" translatable="false">Android</string>
    <string name="conference_all" translatable="false">Все доклады</string>
    <string-array name="conference_title">
        <item>Как мы ускоряем Яндекс под Android</item>
        <item>Kotlin-friendly Annotation Processing</item>
        <item>D8/R8 vs DX/Proguard</item>
    </string-array>
    <string-array name="conference_text">
        <item>
            Многие Android-разработчики знают стандартные методы профилирования приложений,
            инструменты для отладки и улучшения производительности. Однако для случая больших
            приложений этого не всегда достаточно. Мы поговорим о нестандартных способах ускорения
            работы приложения, затронем самые разные аспекты, как вопросы UI, так и инструментов и
            околосерверных вещей. Я надеюсь, что этот доклад заставит вас посмотреть на вопросы
            производительности по-новому и подумать о том, что вы можете сделать в своем приложении.
        </item>
        <item>
            Рекламируя вашему другу Kotlin, как замену Java, наверняка первым аргументом будет
            тот самый синтаксический сахар, от которого мы получаем профит каждый день: поддержка
            nullability из коробки, аргументы по умолчанию, свойства-делегаты, data и sealed классы
            и т.д. Но если нам понадобится прикрутить к проекту процессор аннотаций, то, к сожалению,
            вся информация, которую получится собрать о нашем коде, будет Java-специфична, а Kotlin-фичи
            останутся незамеченными. В этом докладе мы выясним, как использовать метаданные, добавляемые
            Kotlin-компилятором к коду, чтобы получить информацию об использованных особенностях языка,
            и как использовать её во время обработки аннотаций.
        </item>
        <item>
            В Android тулчейн добавили новый компилятор - D8 (Dope 8), который позволяет компилировать
            быстрее, чем DX, и иметь наименьший итоговый размер apk, а также R8 - замена ProGuard. В
            этом докладе постараемся разобраться в этих новинках, а также сравним и поймём, как компилирует
            D8 против старого доброго DX, зачем сделали второй ProGuard и насколько это всё стабильно.
        </item>
    </string-array>
    <string-array name="conference_speaker">
        <item>Artur Vasilov</item>
        <item>Sergey Ryabov</item>
        <item>Alexandr Efremenkov</item>
    </string-array>
    <string-array name="speaker_work">
        <item>Senior Android Developer at Яндекс</item>
        <item>Mobile Consultant</item>
        <item>System Android developer at Yandex.Taxi</item>
    </string-array>
    <string-array name="speaker_country">
        <item>St. Petersburg, Russia</item>
        <item>Digital Nomad, Russia</item>
        <item>Moscow, Russia</item>
    </string-array>
    <string-array name="speaker_description">
        <item>Android Developer with over five years of professional experience and love of creating extremely high-quality apps with perfect UI / UX and optimizations. Working at Yandex. GDG Leader.</item>
        <item>Currently Sergey is an independent Android Engineer and Consultant with the background in backend dev. Co-organiser of the first Kotlin User Group in Russia and Android Academy in St. Petersburg and Moscow, usually speaks about Kotlin and Android. Kotlin early adopter, digital nomad.</item>
        <item>Пишу код, смотрю в Android.</item>
    </string-array>
</resources>
